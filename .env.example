# =============================================================================
# rclone Docker Container Configuration
# =============================================================================
# Copy this file to .env and customize the values below for your setup.
# This file contains example values and documentation for all configuration options.

# =============================================================================
# Basic Configuration
# =============================================================================

# Container user and group IDs
# Run 'id -u' and 'id -g' on your host to get your user and group IDs
PUID=1000
PGID=1000

# Timezone (use 'timedatectl list-timezones' to see available options)
TZ=Etc/UTC

# File creation mask (umask)
# 022 = files 644, directories 755 (recommended)
# 002 = files 664, directories 775 (group writable)
UMASK=022

# =============================================================================
# Network Configuration
# =============================================================================

# External port for rclone web GUI and API
# Default rclone Web GUI port is 5572
EXTERNAL_PORT=5572

# =============================================================================
# Path Configuration
# =============================================================================

# Configuration directory (contains rclone.conf, cache, logs)
CONFIG_PATH=./config

# Primary data directory for cloud storage operations
DATA_PATH=./data

# Logs directory (can be separate from config)
LOGS_PATH=./logs

# Additional mount points (customize as needed)
MEDIA_PATH=./media
BACKUP_PATH=./backup

# Secrets directory (for FILE__ prefix environment variables)
SECRETS_PATH=./secrets

# =============================================================================
# rclone Configuration
# =============================================================================

# rclone operation mode: 'rcd' (Web GUI) or 'serve' (file server)
# rcd: Starts rclone remote control daemon with Web GUI on port 5572
# serve: Starts rclone file server (http/webdav/ftp) on specified port
RCLONE_MODE=rcd

# Log level: DEBUG, INFO, NOTICE, ERROR
RCLONE_LOG_LEVEL=INFO

# Web GUI settings (for both rcd and serve modes)
RCLONE_WEB_GUI=true
RCLONE_WEB_GUI_USERNAME=admin

# =============================================================================
# Security Configuration (FILE__ Prefix Support)
# =============================================================================
# These variables support the FILE__ prefix for reading from files.
# Example: FILE__RCLONE_CONFIG_PASS=/run/secrets/rclone_config_pass
# This will read the password from the specified file instead of environment variable.

# rclone configuration password (if config is encrypted)
# FILE__RCLONE_CONFIG_PASS=/run/secrets/rclone_config_pass

# rclone password for authentication
# FILE__RCLONE_PASSWORD=/run/secrets/rclone_password

# rclone secondary password
# FILE__RCLONE_PASSWORD2=/run/secrets/rclone_password2

# Web GUI password
# FILE__RCLONE_WEB_GUI_PASSWORD=/run/secrets/rclone_web_gui_password

# =============================================================================
# Advanced Configuration
# =============================================================================

# Custom rclone arguments (passed to rclone serve commands)
# Example: RCLONE_SERVE_ARGS=--addr :5572 --user admin --pass mypassword
RCLONE_SERVE_ARGS=

# Default serve protocol: http, webdav, ftp, sftp
RCLONE_SERVE_PROTOCOL=http

# Bandwidth limits (optional)
# Example: --bwlimit 10M (limit to 10MB/s)
RCLONE_BWLIMIT=

# Cache settings
RCLONE_CACHE_CHUNK_SIZE=5M
RCLONE_CACHE_TOTAL_CHUNK_SIZE=10G

# =============================================================================
# Development and Debug Configuration
# =============================================================================

# Enable debug mode for troubleshooting
DEBUG_MODE=false

# Additional debug options
RCLONE_DEBUG_FLAGS=

# =============================================================================
# Docker Build Configuration
# =============================================================================

# Image name and tag for local builds
IMAGE_NAME=mildman1848/rclone
IMAGE_TAG=latest

# Build arguments
RCLONE_VERSION=1.71.0

# =============================================================================
# Example Configurations
# =============================================================================

# Example 1: Basic file serving
# RCLONE_SERVE_PROTOCOL=http
# RCLONE_SERVE_ARGS=--addr :5572 --read-only

# Example 2: WebDAV server with authentication
# RCLONE_SERVE_PROTOCOL=webdav
# RCLONE_SERVE_ARGS=--addr :5572 --user admin --pass secretpassword

# Example 3: FTP server
# RCLONE_SERVE_PROTOCOL=ftp
# EXTERNAL_PORT=2121
# RCLONE_SERVE_ARGS=--addr :2121 --user ftpuser --pass ftppass

# =============================================================================
# Notes
# =============================================================================
#
# 1. File Permissions:
#    - Ensure PUID/PGID match your host user to avoid permission issues
#    - Use UMASK to control default file permissions
#
# 2. Security:
#    - Use FILE__ prefixed variables for sensitive data
#    - Store secrets in a separate directory with restricted access
#    - Consider using Docker secrets for production deployments
#
# 3. Performance:
#    - Adjust cache settings based on your storage and performance needs
#    - Use bandwidth limits if needed to control network usage
#
# 4. Paths:
#    - All paths can be relative (./config) or absolute (/host/path/config)
#    - Ensure the host directories exist and have proper permissions
#
# 5. rclone Configuration:
#    - Initial rclone config will be created in CONFIG_PATH/rclone/
#    - Use 'docker exec -it rclone rclone config' to configure remotes
#
# =============================================================================